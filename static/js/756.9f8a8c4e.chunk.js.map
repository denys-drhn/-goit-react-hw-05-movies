{"version":3,"file":"static/js/756.9f8a8c4e.chunk.js","mappings":"8PAKMA,EAAiB,mCAAG,WAAMC,GAAN,gGAECC,EAAAA,EAAAA,IAAA,UAJV,+BAIU,kBAA+BD,GAAW,CAC/DE,OAAQ,CACNC,QAPQ,mCAQRC,SAAU,WALQ,cAEhBC,EAFgB,yBASfA,EAASC,MATM,gCAWtBC,QAAQC,IAAR,MAXsB,yDAAH,sDAevB,I,SCnBA,EAA4B,gCAA5B,EAAsE,8BAAtE,EAA4G,4BAA5G,EAA+I,2BAA/I,EAAuL,iCAAvL,EAAiO,6BAAjO,EAAqQ,2B,sECkHrQ,EAzGqB,WAAO,IAAD,IACjBR,GAAYS,EAAAA,EAAAA,MAAZT,QACR,GAA0BU,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAiB3D,IAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,6GAEIzB,EAAkBC,GAFtB,OAEdyB,EAFc,OAGpBb,EAASa,GACTX,GAAa,GAJO,gDAMpBE,EAAS,EAAD,IANY,yDAAH,qDAUrBQ,GACD,GAAE,CAACxB,KAGCW,EACH,OAAO,SAAC,KAAD,CAAce,MAAM,MAAMC,MAAM,YAGzC,IAEMC,EADcjB,EAAMkB,aACDC,MAAM,EAAG,GAElC,OACE,iBAAKC,UAAWC,EAAhB,UACGnB,GACC,gBAAKkB,UAAU,SAAf,UACE,SAAC,KAAD,CAAcL,MAAM,MAAMC,MAAM,eAGlC,4BACE,mBAAQI,UAAWC,EAAnB,UAEE,SAAC,KAAD,CAAMD,UAAWC,EAAUC,GAAId,EAAoBe,QAAnD,wBAIF,iBAAKH,UAAWC,EAAhB,WACE,gBACEG,IACExB,EAAMyB,YArBI,mCAsBYzB,EAAMyB,YACxBC,EAENC,IAAK3B,EAAM4B,MACXR,UAAWC,KAEb,iBAAKD,UAAWC,EAAhB,WACE,0BACGrB,EAAM6B,eADT,IAC0BZ,EAD1B,QAGA,yCAAiBa,KAAKC,MAA2B,GAArB/B,EAAMgC,cAAlC,QAEA,sCACA,uBAAIhC,EAAMiC,YACV,oCACA,wBACGjC,EAAMkC,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAChB,wBAAcA,GAALD,EADO,aAMxB,iBAAKhB,UAAWC,EAAhB,WACE,kDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,iCAMV,SAAC,EAAAgB,SAAD,CACEC,UACE,SAAC,KAAD,CACEC,OAAO,KACPzB,MAAM,KACN0B,UAAU,uBACVC,aAAc,CAAC,EACfC,aAAa,uBACbC,YAAY,UACZC,SAAS,YATf,UAaE,SAAC,KAAD,MAEDzC,IAAS,qDAGf,C","sources":["services/fetchMovieDetails.js","webpack://react-homework-template/./src/pages/MoviesDetails/MovieDetails.module.css?1850","pages/MoviesDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'a4c701b3a41d7d3c7de995b9f81d852d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default fetchMovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__VvxPr\",\"content\":\"MovieDetails_content__zbGVE\",\"image\":\"MovieDetails_image__oemiJ\",\"info\":\"MovieDetails_info__19boC\",\"additional\":\"MovieDetails_additional__6Pykv\",\"button\":\"MovieDetails_button__t4okL\",\"link\":\"MovieDetails_link__OL61d\"};","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { useState, useEffect } from 'react';\nimport fetchMovieDetails from 'services/fetchMovieDetails';\nimport { ProgressBar } from 'react-loader-spinner';\nimport css from './MovieDetails.module.css';\nimport { useRef } from 'react';\nimport IMAGE_DEFAULT_URL from '../../images/default-poster.jpg';\nimport { InfinitySpin } from 'react-loader-spinner';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const location = useLocation(); // для кнопки назад\n  const backLinkLocationRef = useRef(location.state?.from ?? '/'); // для кноаки назад\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      try {\n        const movieData = await fetchMovieDetails(movieId);\n        setMovie(movieData);\n        setIsLoading(false); // устанавливаем isLoading в false после получения данных\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    getMovieDetails();\n  }, [movieId]);\n\n  //   пока идет запрос\n  if (!movie) {\n    return <InfinitySpin width=\"200\" color=\"#4fa94d\" />;\n  }\n\n  const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n  const releaseDate = movie.release_date;\n  const year = releaseDate.slice(0, 4);\n\n  return (\n    <div className={css.container}>\n      {isLoading ? (\n        <div className=\"loader\">\n          <InfinitySpin width=\"200\" color=\"#4fa94d\" />\n        </div>\n      ) : (\n        <div>\n          <button className={css.button}>\n            {/*кнопка назад + Elvis */}\n            <Link className={css.link} to={backLinkLocationRef.current}>\n              Go back\n            </Link>\n          </button>\n          <div className={css.content}>\n            <img\n              src={\n                movie.poster_path\n                  ? IMAGES_BASE_URL + movie.poster_path\n                  : IMAGE_DEFAULT_URL\n              }\n              alt={movie.title}\n              className={css.image}\n            />\n            <div className={css.info}>\n              <h1>\n                {movie.original_title}({year})\n              </h1>\n              <p>User Score : {Math.round(movie.vote_average * 10)}%</p>\n\n              <h2>Overview</h2>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <ul>\n                {movie.genres.map(({ id, name }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          <div className={css.additional}>\n            <p>Aditional information</p>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Revievs</Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      )}\n      <Suspense\n        fallback={\n          <ProgressBar\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"progress-bar-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"progress-bar-wrapper\"\n            borderColor=\"#F4442E\"\n            barColor=\"#51E5FF\"\n          />\n        }\n      >\n        <Outlet />\n      </Suspense>\n      {error && <p>Something went wrong...</p>}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["fetchMovieDetails","movieId","axios","params","api_key","language","response","data","console","log","useParams","useState","movie","setMovie","isLoading","setIsLoading","error","setError","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getMovieDetails","movieData","width","color","year","release_date","slice","className","css","to","current","src","poster_path","IMAGE_DEFAULT_URL","alt","title","original_title","Math","round","vote_average","overview","genres","map","id","name","Suspense","fallback","height","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor"],"sourceRoot":""}