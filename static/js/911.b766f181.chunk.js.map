{"version":3,"file":"static/js/911.b766f181.chunk.js","mappings":"sPAKMA,EAAiB,mCAAG,WAAMC,GAAN,kGAECC,EAAAA,EAAAA,IAAA,UAJV,+BAIU,kBAA+BD,EAA/B,YAAkD,CACvEE,OAAQ,CACNC,QAPQ,mCAQRC,SAAU,WALQ,cAEhBC,EAFgB,OASdC,EAASD,EAASE,KAAlBD,KATc,kBAUfA,GAVe,gCAYtBE,QAAQC,IAAR,MAZsB,yDAAH,sDAgBvB,ICpBA,EAA2B,uBAA3B,EAA4D,sB,SC0C5D,EArCa,WACX,IAAQT,GAAYU,EAAAA,EAAAA,MAAZV,QACR,GAAwBW,EAAAA,EAAAA,UAAS,IAAjC,eAAOL,EAAP,KAAaM,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,6GAEOf,EAAkBC,GAFzB,OAEXe,EAFW,OAGjBH,EAAQG,GAHS,gDAKjBP,QAAQQ,MAAR,MALiB,yDAAH,qDASlBF,GACD,GAAE,CAACd,IAIJ,OACE,eAAIiB,UAAWC,EAAf,SACGZ,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,aAA7B,OACR,2BACE,gBACEN,UAAWC,EACXM,IACED,EATY,mCASqBA,E,00FAEnCE,IAAKJ,KAEP,uBAAIA,KACJ,uCAAeC,OATRF,EADD,KAef,C","sources":["services/fetchMovieCredits.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'a4c701b3a41d7d3c7de995b9f81d852d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    const { cast } = response.data;\n    return cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default fetchMovieCredits;\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castImg\":\"Cast_castImg__T4WbF\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport fetchMovieCredits from '../../services/fetchMovieCredits';\nimport css from './Cast.module.css';\nimport IMAGE_DEFAULT_URL from '../../images/default-profile.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getMovieCast = async () => {\n      try {\n        const movieCast = await fetchMovieCredits(movieId);\n        setCast(movieCast);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    getMovieCast();\n  }, [movieId]);\n\n  const IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n\n  return (\n    <ul className={css.castList}>\n      {cast.map(({ cast_id, name, character, profile_path }) => (\n        <li key={cast_id}>\n          <img\n            className={css.castImg}\n            src={\n              profile_path ? IMAGES_BASE_URL + profile_path : IMAGE_DEFAULT_URL\n            }\n            alt={name}\n          />\n          <p>{name}</p>\n          <p>Character: {character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default Cast;\n"],"names":["fetchMovieCredits","movieId","axios","params","api_key","language","response","cast","data","console","log","useParams","useState","setCast","useEffect","getMovieCast","movieCast","error","className","css","map","cast_id","name","character","profile_path","src","alt"],"sourceRoot":""}